üñ•Ô∏è Remote Development
with DevPod

Development Container
‚Ä¢ Created initially by Mircrosoft
‚Ä¢ Open Standard
‚Ä¢ Almost everthing you need to develop is in the container
‚Ä¢ Configuration is defined in the devcontainer.json

Features
‚Ä¢ Open-Source
  ‚Ä¢ Mozilla Public License 2.0
  ‚Ä¢ Uses the DevContainer Standard
‚Ä¢ Client-only
  ‚Ä¢ Ships a lightweight Desktop for macOS, Linux & Windows
  ‚Ä¢ There's is also a CLI
  ‚Ä¢ Nothing to install on the server
  ‚Ä¢ You can change where you run dev container on the fly
‚Ä¢ Unopinionated
  ‚Ä¢ You should be able to use DevPod with any infrastructure you have
‚Ä¢ Cross IDE support (vscode, openvscode, vim)
  ‚Ä¢ git & docker credentials sync
‚Ä¢ Costs
  ‚Ä¢ No vendor lock-in
  ‚Ä¢ shuts down unused virtual machines automatically

Provider
DevPod  uses the concept of providers, similiar to Terraform.
Providers define how DevPod creates and manage specific infrastructure
to run the dev containers on.
Two Types:
‚Ä¢ Machine providers
‚Ä¢ Non-machine providers

Machine Providers
‚Ä¢ Provision a VM to run the dev containers on
‚Ä¢ Examples: AWS, GCP, Azure, Custom

Non-machine Providers
‚Ä¢ docker
‚Ä¢ Kubernetes (uses a  kube context)
‚Ä¢ SSH (runs containers on the target host)

Desktop App
DevPod comes with an easy-to-use desktop
application that abstracts all the complexity away.
If you want to build your own integration,
DevPod offers a feature-rich CLI as well.

Demo Time

# /* vim: set filetype=sent : */ ~
